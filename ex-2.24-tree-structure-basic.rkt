#lang racket
(require racket/trace)
(define (square x) (* x x))



(list 1
      (list 2
            (list 3
                  4)))


; '(1 (2 (3 4)))
;
;
;->[.|.]->[.|\]
;   |      |  
;   1      +->[.|.]->[.|\]
;              |      |
;              2      +->[.|.]->[.|\]
;                         |      |
;                         3      4
;
;    +---1
;    |
; <--+   +---2
;    |   |
;    <---+   +---3
;        |   |
;        <---+
;            |
;            |---4
;
;
; ps. For comparison:
(cons 1
      (cons 2
            (cons 3
                  4)))
;-> [.|.] -> [.|.] -> [.|.] -> 4
;    |        |        |
;    1        2        3
;

